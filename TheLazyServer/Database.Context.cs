//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheLazyServer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class the_lazyEntities : DbContext
    {
        public the_lazyEntities()
            : base("name=the_lazyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<chat_messages> chat_messages { get; set; }
        public DbSet<element_comments> element_comments { get; set; }
        public DbSet<elements> elements { get; set; }
        public DbSet<likes> likes { get; set; }
        public DbSet<notifications> notifications { get; set; }
        public DbSet<posts> posts { get; set; }
        public DbSet<purchases> purchases { get; set; }
        public DbSet<reports> reports { get; set; }
        public DbSet<requests> requests { get; set; }
        public DbSet<sessions> sessions { get; set; }
        public DbSet<subjects> subjects { get; set; }
        public DbSet<users> users { get; set; }
        public DbSet<chat_rooms> chat_rooms { get; set; }
    
        public virtual int CloseAllSessionsForUser(Nullable<int> p_user_id)
        {
            var p_user_idParameter = p_user_id.HasValue ?
                new ObjectParameter("p_user_id", p_user_id) :
                new ObjectParameter("p_user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CloseAllSessionsForUser", p_user_idParameter);
        }
    
        public virtual int CloseSession(Nullable<int> p_session_id)
        {
            var p_session_idParameter = p_session_id.HasValue ?
                new ObjectParameter("p_session_id", p_session_id) :
                new ObjectParameter("p_session_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CloseSession", p_session_idParameter);
        }
    
        public virtual int KeepSessionAlive(Nullable<int> p_session_id)
        {
            var p_session_idParameter = p_session_id.HasValue ?
                new ObjectParameter("p_session_id", p_session_id) :
                new ObjectParameter("p_session_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KeepSessionAlive", p_session_idParameter);
        }
    
        public virtual int LoginUser(string p_username, string p_password, string p_ipendpoint, ObjectParameter p_session_id)
        {
            var p_usernameParameter = p_username != null ?
                new ObjectParameter("p_username", p_username) :
                new ObjectParameter("p_username", typeof(string));
    
            var p_passwordParameter = p_password != null ?
                new ObjectParameter("p_password", p_password) :
                new ObjectParameter("p_password", typeof(string));
    
            var p_ipendpointParameter = p_ipendpoint != null ?
                new ObjectParameter("p_ipendpoint", p_ipendpoint) :
                new ObjectParameter("p_ipendpoint", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoginUser", p_usernameParameter, p_passwordParameter, p_ipendpointParameter, p_session_id);
        }
    
        public virtual int RegisterUser(string d_username, string pass, string email, ObjectParameter result)
        {
            var d_usernameParameter = d_username != null ?
                new ObjectParameter("d_username", d_username) :
                new ObjectParameter("d_username", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterUser", d_usernameParameter, passParameter, emailParameter, result);
        }
    }
}
